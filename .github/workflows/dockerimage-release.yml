name: Releases

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # load full history

      - name: install node v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          check-latest: true
      - name: Install latest yarn
        run: |
          npm install -g yarn

      - name: Build a bot
        run: make

      - name: Zip a bot
        run: make pack

      - name: Generate changelog
        id: log
        run: echo ::set-output name=MESSAGE::$(node tools/changelog.js --escape generate)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: SOGEBOT ${{ github.ref }}
          body: |
            ${{ steps.log.outputs.MESSAGE }}
          draft: false
          prerelease: false

      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ steps.create_release.outputs.id }}
          args: '*.zip'

  build:
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}
      -
        name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
      -
        name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            sogebot/release:latest
            sogebot/release:${{ steps.get_version.outputs.VERSION }}
