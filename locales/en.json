{
  "core": {
    "loaded": "is loaded and",
    "enabled": "enabled",
    "disabled": "disabled",
    "usage": "Usage",
    "online": "Stream is online for (time)",
    "offline": "Stream is currently offline for (time)",
    "lang-selected": "Bot language is currently set to english",
    "command-parse": "Sorry, (sender), but this command is not correct, use",
    "error": "Sorry, (sender), but something went wrong!",
    "no-response": "",
    "api": {
      "error": "(sender), API is not responding correctly!",
      "not-available": "not available"
    },
    "mute": {
      "true": "Mute enabled. Bot will not send messages.",
      "false": "Mute disabled. Bot will send messages."
    },
    "theme": "",
    "percentage": {
      "true": "", "false": ""
    },
    "settings": {
      "uptime-format": "Uptime format set to (value)",
      "atUsername": {
        "true": "Usernames will be shown with @ like @foo",
        "false": "Usernames will be shown without @ like foo"
      }
    },
    "years": "year|years",
    "months": "month|months",
    "days": "day|days",
    "hours": "hour|hours",
    "minutes": "minute|minutes",
    "messages": "message|messages",
    "isRegistered": "(sender), you cannot use (keyword), because is already in use for another action!"
  },
  "overlay": {
    "emotes": {
      "settings": {
        "OEmotesSize": "Emoticon size is set to (value)",
        "OEmotesMax": "Max count of same emoticon to show is (value)",
        "OEmotesAnimation": "Emoticon show animation is (value)",
        "OEmotesAnimationTime": "Emoticon animation duration is (value)ms"
      }
    }
  },
  "webpanel": {
    "video_id": "Video ID",
    "highlights": "Highlights",
    "cooldown-quiet-header": "Show cooldown message",
    "cooldown-quiet-toggle-no": "Notify",
    "cooldown-quiet-toggle-yes": "Won't notify",
    "at-username": "Usernames",
    "show-with-at": "Show with @",
    "send-message-as-a-bot": "Send message as a bot",
    "chat-as-bot": "Chat (as bot)",
    "product": "Product",
    "optional": "optional",
    "placeholder-search": "Search",
    "placeholder-enter-product": "Enter product",
    "placeholder-enter-keyword": "Enter keyword",
    "overlay-emotes-size": "Emoticon size",
    "overlay-emotes-max": "Max same emoticons to show",
    "overlay-emotes-animation": "Emoticon animation",
    "overlay-emotes-animation-time": "Animation Duration",
    "overlay-carousel-upload": "Upload image",
    "fade-out-top": "fade up",
    "fade-out-zoom": "fade zoom",
    "moderation-subscribers-toggle": "Timeout subscribers",
    "moderation-spaces-toggle": "Timeout links with spaces",
    "global": "Global",
    "user": "User",
    "alerts": "Alerts",
    "dashboard": "Dashboard",
    "carousel": "Image Carousel",
    "manage": "Manage",
    "settings": "Settings",
    "permissions": "Permissions",
    "permission": "Permission",
    "stats": "Stats",
    "viewers": "Viewers",
    "systems": "Systems",
    "overlays": "Overlays",
    "aliases": "Aliases",
    "alias": "Alias",
    "command": "Command",
    "clips": "Clips",
    "commands-cooldowns": "Commands cooldowns",
    "custom-commands": "Custom commands",
    "title-template": "Title template",
    "keywords": "Keywords",
    "keyword": "Keyword",
    "moderation": "Moderation",
    "notice": "Notice",
    "notices": "Notices",
    "price": "Price",
    "ranks": "Ranks",
    "event-listeners": "Event listeners",
    "songs": "Songs",
    "previous": "Previous",
    "next": "Next",
    "or": "- OR -",
    "close": "Close",
    "save-changes": "Save changes",
    "custom-title-empty-error": "Custom title is checked, but is empty!",
    "title": "Title",
    "change-title": "Change title",
    "game": "game",
    "change-game": "Change game",
    "click-to-change": "click to change",
    "uptime": "uptime",
    "not-available": "Not Available",
    "max-viewers": "Max viewers",
    "new-chatters": "New Chatters",
    "chat-messages": "Chat messages",
    "views": "Views",
    "hosts": "Hosts",
    "followers": "Followers",
    "status": "Status",
    "mute": "mute",
    "add-widget": "Add widget",
    "remove-widget": "Remove widget",
    "for": "for",
    "close-bet-after": "Close bet after",
    "gain-every-option": "Gain every option",
    "reuse-bet": "re-use bet",
    "refund": "refund",
    "open-queue": "Open queue",
    "close-queue": "Close queue",
    "number-of-users": "No. users",
    "roll-again": "Roll again",
    "follower": "Follower",
    "minutes": "minutes",
    "seconds": "seconds",
    "hours": "hours",
    "eligible-to-enter": "Eligible to enter:",
    "followers-only": "Followers only",
    "subscribers-only": "Subscribers only",
    "everyone": "Everyone",
    "roll-a-winner": "Roll a winner",
    "send-message": "Send Message",
    "messages": "Messages",
    "announce-every": "Announce every",
    "create": "Create",
    "cooldown": "Cooldown",
    "confirm": "Confirm",
    "enable": "Enable",
    "disable": "Disable",
    "slug": "Slug",
    "stream-title": "Stream title",
    "posted-by": "Posted by",
    "time": "Time",
    "type": "Type",
    "response": "Response",
    "cost": "Cost",
    "name": "Name",
    "playlist": "Playlist",
    "public-link": "public link",
    "youtube-id": "YouTube ID",
    "length": "Length",
    "volume": "Volume",
    "start-time": "Start Time",
    "end-time": "End Time",
    "watched-time": "Watched time",
    "username": "Username",
    "last-seen": "Last Seen",
    "never-seen-in-chat": "never seen in chat",
    "points": "Points",
    "calendar": "Calendar",
    "stream-events": "Stream Events",
    "select-date-from-calendar": "Select date from calendar",
    "select-stream-from-calendar-and-events": "Select stream from calendar and events",
    "there-is-no-events-on-selected-date": "There is no events on selected date",
    "string": "string",
    "points-name": "Points Name",
    "points-single-multi": "single|multi",
    "points-response": "Points Response",
    "points-interval": "Points Interval",
    "points-per-interval": "Points per Interval",
    "points-interval-offline": "Points Interval (offline)",
    "points-per-interval-offline": "Points per Interval (offline)",
    "interval": "Interval",
    "number": "number",
    "minimal-messages-required": "Minimal Messages Required",
    "max-duration": "Max duration",
    "shuffle": "Shuffle",
    "song-requests": "Song Requests",
    "format": "Format",
    "available": "Available",
    "links": "Links",
    "symbols": "Symbols",
    "long-messages": "Long Messages",
    "capitals": "Capitals",
    "spam": "Spam",
    "colors": "Colors",
    "emotes": "Emotes",
    "trigger-length-of-message": "Trigger length of message",
    "max-symbols-consecutively": "Max symbols consecutively",
    "max-symbols-percentage": "Max symbols percentage",
    "max-capitals-percentage": "Max capitals percentage",
    "max-spam-length": "Max spam length",
    "max-emotes-in-message": "Max emotes in message",
    "timeout-duration": "Timeout duration",
    "timeout-settings": "Timeout settings",
    "timeout-blacklist": "Blacklist",
    "timeout-whitelist": "Whitelist",
    "one-record-per-line": "one record per line",
    "warnings-before-user-timeout": "Warnings before user timeout",
    "warning-should-be-timeout": "Warning is 1s timeout (deletes chat)",
    "announce-timeouts-in-chat": "Announce timeouts in chat",
    "on": "on",
    "off": "off",
    "will-timeout": "timeout",
    "warning": "warning",
    "announce": "announce",
    "muted": "muted",
    "search-by-username": "Search by username",
    "create-and-use-a-new-game": "Create and use a new game",
    "create-and-use-a-new-title": "Create and use a new title",
    "followers-show-number": "Show",
    "followers-show": "followers",
    "subscribers-show": "subscribers",
    "followers-size": "Font size",
    "custom-message": "Custom message",
    "minimal-watched-time": "Minimal watched time:",
    "widget-title-bets": "BETS",
    "widget-title-chat": "CHAT",
    "widget-title-clips": "LATEST CLIPS",
    "widget-title-queue": "QUEUE",
    "widget-title-raffles": "RAFFLES",
    "widget-title-soundboard": "SOUNDBOARD",
    "widget-title-monitor": "TWITCH STREAM MONITOR",
    "widget-title-ytplayer": "MUSIC PLAYER",
    "widget-title-latest-followers": "LATEST FOLLOWERS",
    "widget-title-latest-subscribers": "LATEST SUBSCRIBERS",
    "event": "event",
    "operation": "operation",
    "user-joined-channel": "user joined a channel",
    "user-parted-channel": "user parted a channel",
    "follow": "new follow",
    "unfollow": "unfollow",
    "subscription": "new subscription",
    "resub": "user resubscribed",
    "command-send-x-times": "command was send x times",
    "number-of-viewers-is-at-least-x": "number of viewers is at least x",
    "stream-started": "stream started",
    "stream-stopped": "stream stopped",
    "stream-is-running-x-minutes": "stream is running x minutes",
    "every-x-seconds": "every x seconds",
    "cheer": "received cheer",
    "clearchat": "chat was cleared",
    "action": "user sent /me",
    "ban": "user was banned",
    "hosting": "your channel started hosting",
    "mod": "user is a new mod",
    "timeout": "user was timeouted",
    "create-a-new-event-listener": "Create a new event listener",
    "send-chat-message": "send a chat message",
    "send-whisper": "send a whisper",
    "run-command": "run a command",
    "play-sound": "play a sound",
    "count": "count",
    "timestamp": "timestamp",
    "message": "message",
    "sound": "sound",
    "emote-explosion": "emote explosion",
    "emotes": "emotes",
    "quiet": "quiet",
    "true": "true",
    "false": "false",
    "light": "light theme",
    "dark": "dark theme",
    "gambling": "Gambling",
    "seppukuTimeout": "Timeout for !sepukku",
    "rouletteTimeout": "Timeout for !roulette",
    "click-to-highlight": "highlight"
  },
  "raffle": {
    "announceInterval": "Opened raffles will be announced every (value) minute",
    "announceCustomMessage": "Raffle custom announce message set to `(value)`",
    "announceTitleTemplate": "Template title set to `(value)`",
    "minWatchedTime": "and you need to have at least (time) watched hours to parcitipate",
    "participation": {
      "success": "You just entered in current raffle! Good luck!",
      "failed": "Sorry, you are not eligible to enter the raffle! If you want to know conditions to enter, whisper me !raffle"
    },
    "info": {
      "opened": {
        "everyone": "(sender), raffle is opened. To enter type !(keyword). Everyone can participate",
        "everyoneAndProduct": "(sender), raffle is opened for `(product)`. To enter type !(keyword). Everyone can participate",
        "followers": "(sender), raffle is opened. To enter type !(keyword). Only followers can participate",
        "followersAndProduct": "(sender), raffle is opened o `(product)`. To enter type !(keyword). Only followers can participate",
        "subscribers": "(sender), raffle is opened. To enter type !(keyword). Only subscribers can participate",
        "subscribersAndProduct": "(sender), raffle is opened o `(product)`. To enter type !(keyword). Only subscribers can participate",
        "none": "(sender), raffle is opened. To enter type !(keyword). Everyone can participate"
      },
      "closed": "(sender) Raffle is closed, but winner is not picked yet!",
      "notRunning": "(sender) No raffle is currently opened!"
    },
    "open": {
      "error": "(sender) Raffle was not opened! Use: !raffle open [raffle-keyword] [product(optional)] [time=#(optional)] [followers(optional)]",
      "running": "(sender) Raffle is already running! Keyword for raffle is !(keyword)",
      "locked": "(sender) Raffle is closed! Choose winner with !raffle pick",
      "ok": {
        "everyone": "New raffle is opened. To enter type !(keyword). Everyone can participate",
        "everyoneAndProduct": "New raffle is opened for `(product)`. To enter type !(keyword). Everyone can participate",
        "followers": "New raffle is opened. To enter type !(keyword). Only followers can participate",
        "followersAndProduct": "New raffle is opened o `(product)`. To enter type !(keyword). Only followers can participate",
        "subscribers": "New raffle is opened. To enter type !(keyword). Only subscribers can participate",
        "subscribersAndProduct": "New raffle is opened o `(product)`. To enter type !(keyword). Only subscribers can participate",
        "none": "New raffle is opened. To enter type !(keyword). Everyone can participate"
      },
      "notice": {
        "everyone": "Raffle is currently running. To enter type !(keyword). Everyone can participate",
        "everyoneAndProduct": "Raffle is currently running for `(product)`. To enter type !(keyword). Everyone can participate",
        "followers": "Raffle is currently running. To enter type !(keyword). Only followers can participate",
        "followersAndProduct": "Raffle is currently running o `(product)`. To enter type !(keyword). Only followers can participate",
        "subscribers": "Raffle is currently running. To enter type !(keyword). Only subscribers can participate",
        "subscribersAndProduct": "Raffle is currently running o `(product)`. To enter type !(keyword). Only subscribers can participate",
        "none": "Raffle is currently running. To enter type !(keyword). Everyone can participate"
      }
    },
    "close": {
      "ok": "Current raffle was closed! You cannot participate anymore!",
      "notRunning": "(sender) No raffle is currently running!"
    },
    "pick": {
      "winner": {
        "withProduct": "Congratulations @(winner), you just won a raffle!",
        "withoutProduct": "Congratulations @(winner), you just won a raffle for `(product)`!"
      },
      "noParticipants": "There were no participants in this raffle! No winner selected."
    }
  },
  "bets": {
      "newBet": "(sender), your current bet is (amount) (pointsName) on (option). You can win (winAmount) (winPointsName)!",
      "running": "(sender), bet is already opened! Use !bet close [(options)]",
      "notRunning": "No bet is currently opened, ask mods to open it!",
      "opened": "New bet is opened! Use !bet [(options)] [points] to win! You have only (minutes)min to bet!",
      "notEnoughOptions": "(sender), new bets needs at least 2 options!",
      "info": "Bets are opened! Use !bet [(options)] [points] to win! (time)min left to bet!",
      "parseError": "{core.command-parse} !bet to check usage",
      "diffBet": "(sender), you already made a bet on (option) and you cannot bet to different option!",
      "notEnoughPoints": "Sorry, (sender), but you dont have (amount) (pointsName) to bet!",
      "undefinedBet": "Sorry, (sender), but this bet option doesn't exist, use !bet to check usage",
      "betPercentGain": "Bet percent gain per option was set to (value)%",
      "betCloseTimer": "Bets will be automatically closed after (value)min",
      "refund": "Bets were closed without a winning. All users are refunded!",
      "notOption": "(sender), this option doesn't exist! Bet is not closed, check !bet",
      "closed": "Bets was closed and winning option was (option)! (amount) users won!",
      "timeUpBet": "I guess you are too late, (sender), your time for betting is up!",
      "locked": "Betting time is up! No more bets.",
      "zeroBet": "Oh boy, (sender), you cannot bet 0 (pointsName)",
      "lockedInfo": "Bets are opened, but time for betting is up!",
      "removed": "Betting time is up! No bets were sent -> automatically closing"
  },
  "alias": {
    "success": {
      "add": "Alias was added to database",
      "remove": "Alias was deleted from database",
      "list": "List of aliases",
      "enabled": "Alias !(alias) was enabled",
      "disabled": "Alias !(alias) was disabled",
      "visible": "Alias !(alias) will be visible in list",
      "invisible": "Alias !(alias) will not be visible in list"
    },
    "failed": {
      "add": "This alias already exists in database",
      "remove": "This alias cannot be found in database",
      "list": "List of aliases is empty",
      "parse": "{core.command-parse} !alias",
      "toggle": "Alias !(alias) was not found",
      "visible": "(alias.failed.remove)"
    }
  },
  "customcmds": {
    "success": {
      "add": "Command was added to database",
      "remove": "Command was deleted from database",
      "list": "List of commands",
      "enabled": "Command !(command) was enabled",
      "disabled": "Command !(command) was disabled",
      "visible": "Command !(command) will be visible in list",
      "invisible": "Command !(command) will not be visible in list"
    },
    "failed": {
      "add": "This command already exists in database",
      "remove": "This command cannot be found in database",
      "list": "List of commands is empty",
      "parse": "{core.command-parse} !command",
      "toggle": "Command !(command) was not found",
      "visible": "(customcmds.failed.remove)"
    }
  },
  "keywords": {
    "success": {
      "add": "Keyword was added to database",
      "remove": "Keyword was deleted from database",
      "list": "List of keywords",
      "enabled": "Keyword (keyword) was enabled",
      "disabled": "Keyword (keyword) was disabled"
    },
    "failed": {
      "add": "This keyword already exists in database",
      "remove": "This keyword cannot be found in database",
      "list": "List of keywords is empty",
      "parse": "{core.command-parse} !keyword",
      "toggle": "Keyword (keyword) was not found"
    }
  },
  "notice": {
    "success": {
      "add": "Notice was added to database",
      "remove": "Notice was deleted from database",
      "list": "List of notices",
      "enabled": "Notice (notice) was enabled",
      "disabled": "Notice (notice) was disabled"
    },
    "failed": {
      "add": "This notice already exists in database",
      "notFound": "This notice cannot be found in database",
      "list": "List of notices is empty",
      "parse": "{core.command-parse} !notice",
      "toggle": "Notice (notice) was not found"
    },
    "settings": {
      "noticeInterval": "Notice minimal interval succesfully set to (value) minutes",
      "noticeMsgReq": "Notice minimal required message chat count set to (value)"
    }
  },
  "points": {
    "success": {
      "set": "(username) was set to (amount) (pointsName)",
      "give": "(sender) just gave his (amount) (pointsName) to (username)",
      "all": "All online users just received (amount) (pointsName)!",
      "rain": "Make it rain! All online users just received up to (amount) (pointsName)!",
      "add": "(username) just received (amount) (pointsName)!",
      "remove": "Ouch, (amount) (pointsName) was removed from (username)!"
    },
    "failed": {
      "set": "{core.command-parse} !points set [username] [amount]",
      "give": "{core.command-parse} !points give [username] [amount]",
      "giveNotEnough": "Sorry, (sender), you don't have (amount) (pointsName) to give it to (username)",
      "get": "{core.command-parse} !points get [username]",
      "all": "{core.command-parse} !points all [amount]",
      "rain": "{core.command-parse} !makeitrain [amount]",
      "add": "{core.command-parse} !points add [username] [amount]",
      "remove": "{core.command-parse} !points remove [username] [amount]"
    },
    "settings": {
      "pointsName": "Points name was set to (value) format",
      "pointsResponse": "Points response was changed to: (value)",
      "pointsInterval": "Points online interval set to (value) minutes",
      "pointsPerInterval": "Points when online was set to (value) per online interval",
      "pointsIntervalOffline": "Points offline interval set to (value) minutes",
      "pointsPerIntervalOffline": "Points when offline was set to (value) per offline interval"
    },
    "defaults": {
      "pointsName": {
        "single": "point",
        "multi": "points",
        "xmulti": ""
      },
      "pointsResponse": "(username) has currently (amount) (pointsName)"
    }
  },
  "songs": {
    "settings": {
      "songrequest": {
        "text": "Song requests are ",
        "true": "{songs.settings.songrequest.text} {core.enabled}",
        "false": "{songs.settings.songrequest.text} {core.disabled}"
      },
      "playlist": {
        "text": "Playlist is ",
        "true": "{songs.settings.playlist.text} {core.enabled}",
        "false": "{songs.settings.playlist.text} {core.disabled}"
      },
      "volume": "Volume succesfully set to (value)%",
      "duration": "Maximum song length set to (value) minutes.",
      "shuffle": {
        "true": "Songs will play randomly",
        "false": "Songs will play by time added in playlist"
      }
    },
    "bannedSong": "Song (title) was banned and will never play again!",
    "bannedSongTimeout": "You've got timeout for posting banned song",
    "unbannedSong": "Song was succesfully unbanned",
    "notBannedSong": "This song was not banned",
    "currentSong": {
      "songrequest": "Current song is (title) requested by (username)",
      "playlist": "Current song is (title) from playlist"
    },
    "noCurrentSong": "No song is currently playing",
    "isBanned": "Sorry, (sender), but this song is banned",
    "notFound": "Sorry, (sender), but this song was not found",
    "tooLong": "Sorry, (sender), but this song is too long",
    "addedSong": "(title) was added to queue by (sender)",
    "addedSongPlaylist": "(title) was added to playlist",
    "removeSongQueue": "(title) was removed from queue",
    "alreadyInPlaylist": "Song (title) is already in playlist",
    "removeSongPlaylist": "(title) was removed from playlist"
  },
  "price": {
    "success": {
      "set": "Price for !(command) was set to (amount) (pointsName)",
      "remove" : "Price for !(command) was unset",
      "list": "List of prices",
      "enabled": "Price for !(command) was enabled",
      "disabled": "Price for !(command) was disabled"
    },
    "failed": {
      "parse": "{core.command-parse} !price",
      "remove": "No price was set for !(command)",
      "list": "List of prices is empty",
      "notEnough": "Sorry, (sender), but you don't have (amount) (pointsName) to use !(command)",
      "toggle": "Price for !(command) was not found"
    }
  },
  "rank": {
    "success": {
      "add": "New rank was added to bot",
      "remove" : "Rank was deleted from bot",
      "list": "List of ranks",
      "set": "(username) have rank set to (rank)",
      "unset": "Custom rank was unset for (username)",
      "show": "(sender) have (rank) rank"
    },
    "failed": {
      "parse": "{core.command-parse} !rank help",
      "add": "Rank for this hour already exists",
      "list": "List of ranks is empty",
      "set": "{core.command-parse} !rank set <username> <rank>",
      "unset": "{core.command-parse} !rank unset <username>",
      "notFound": "No rank is associated with this hour",
      "show": "(sender) doesn't have a rank yet."
    }
  },
  "followage": {
    "success": {
      "never": "@(username) is not a channel follower",
      "time": "@(username) is following channel (diff)"
    }
  },
  "lastseen": {
    "success": {
      "never": "(username) was never in this channel!",
      "time": "(username) was last seen at (when) in this channel"
    },
    "failed": {
      "parse": "{core.command-parse} !lastseen [username]"
    }
  },
  "watched": {
    "success": {
      "time": "(username) watched this channel for (time) hours"
    },
    "failed": {
      "parse": "{core.command-parse} !watched or !watched [username]"
    }
  },
  "top": {
    "listWatched": "Top (amount) (watch time): ",
    "listPoints": "Top (amount) (points): "
  },
  "permissions": {
    "success": {
      "change": "Permission for command was succesfully changed"
    },
    "failed": {
      "parse": "Usage: !permission viewer|mods|owner|regular|disable [command]",
      "noCmd": "Sorry, (sender), but this command is not registered in a bot"
    },
    "without-permission": "You don't have enough permissions for '(command)'"
  },
  "moderation": {
    "warning": "[(value) warnings left]",
    "permit": "User (who) can post a link to chat",
    "links": "No links allowed, ask for !permit",
    "symbols": "No excessive symbols usage",
    "longMessage": "Long messages are not allowed",
    "caps": "No excessive caps usage",
    "spam": "Spamming is not allowed",
    "color": "Colors and /me is not allowed",
    "emotes": "No emotes spamming!",
    "blacklist": "No blacklisted words!",
    "failed": {
      "parsePermit": "{core.command-parse} !permit [username]"
    },
    "warnings": {
      "links": "{moderation.links} {moderation.warning}",
      "symbols": "{moderation.symbols} {moderation.warning}",
      "longMessage": "{moderation.longMessage} {moderation.warning}",
      "caps": "{moderation.caps} {moderation.warning}",
      "spam": "{moderation.spam} {moderation.warning}",
      "color": "{moderation.color} {moderation.warning}",
      "emotes": "{moderation.emotes} {moderation.warning}",
      "blacklist": "{moderation.blacklist} {moderation.warning}"
    },
    "settings": {
      "moderationAnnounceTimeouts": {
        "true": "Bot will send timeout messages to chat",
        "false": "Bot won't send timeout messages to chat"
      },
      "moderationLinks": {
        "text": "Moderation of links is",
        "true": "{moderation.settings.moderationLinks.text} {core.enabled}",
        "false": "{moderation.settings.moderationLinks.text} {core.disabled}"
      },
      "moderationLinksWithSpaces": {
        "text": "Moderation of links with spaces is",
        "true": "{moderation.settings.moderationLinksWithSpaces.text} {core.enabled}",
        "false": "{moderation.settings.moderationLinksWithSpaces.text} {core.disabled}"
      },
      "moderationLinksSubs": {
        "text": "Moderation of links for subscribers is",
        "true": "{moderation.settings.moderationLinksSubs.text} {core.enabled}",
        "false": "{moderation.settings.moderationLinksSubs.text} {core.disabled}"
      },
      "moderationLinksTimeout": "Timeout because of links set to (value)s",
      "moderationSymbols": {
        "text": "Moderation of symbols is",
        "true": "{moderation.settings.moderationSymbols.text} {core.enabled}",
        "false": "{moderation.settings.moderationSymbols.text} {core.disabled}"
      },
      "moderationSymbolsSubs": {
        "text": "Moderation of symbols for subscribers is",
        "true": "{moderation.settings.moderationSymbolsSubs.text} {core.enabled}",
        "false": "{moderation.settings.moderationSymbolsSubs.text} {core.disabled}"
      },
      "moderationSymbolsTimeout": "Timeout because of symbols set to (value)s",
      "moderationSymbolsTriggerLength": "Trigger message length for symbols set to (value)",
      "moderationSymbolsMaxConsecutively": "Maximum of consecutively written symbols set to (value)",
      "moderationSymbolsMaxPercent": "Maximum symbols percentage in message set to (value)%",
      "moderationLongMessage": {
        "text": "Moderation of long messages is",
        "true": "{moderation.settings.moderationLongMessage.text} {core.enabled}",
        "false": "{moderation.settings.moderationLongMessage.text} {core.disabled}"
      },
      "moderationLongMessageSubs": {
        "text": "Moderation of long messages for subscribers is",
        "true": "{moderation.settings.moderationLongMessageSubs.text} {core.enabled}",
        "false": "{moderation.settings.moderationLongMessageSubs.text} {core.disabled}"
      },
      "moderationLongMessageTimeout": "Timeout because of long message set to (value)s",
      "moderationLongMessageTriggerLength": "Trigger message length for long messages set to (value)",
      "moderationCaps": {
        "text": "Moderation of caps is",
        "true": "{moderation.settings.moderationCaps.text} {core.enabled}",
        "false": "{moderation.settings.moderationCaps.text} {core.disabled}"
      },
      "moderationCapsSubs": {
        "text": "Moderation of caps for subscribers is",
        "true": "{moderation.settings.moderationCapsSubs.text} {core.enabled}",
        "false": "{moderation.settings.moderationCapsSubs.text} {core.disabled}"
      },
      "moderationCapsTimeout": "Timeout because of caps set to (value)s",
      "moderationCapsTriggerLength": "Trigger message length for caps set to (value)",
      "moderationCapsMaxPercent": "Maximum caps percentage in message set to (value)%",
      "moderationSpam": {
        "text": "Moderation of spam is",
        "true": "{moderation.settings.moderationSpam.text} {core.enabled}",
        "false": "{moderation.settings.moderationSpam.text} {core.disabled}"
      },
      "moderationSpamSubs": {
        "text": "Moderation of spam for subscribers is",
        "true": "{moderation.settings.moderationSpamSubs.text} {core.enabled}",
        "false": "{moderation.settings.moderationSpamSubs.text} {core.disabled}"
      },
      "moderationSpamTimeout": "Timeout because of spam set to (value)s",
      "moderationSpamTriggerLength": "Trigger message length for spam set to (value)",
      "moderationSpamMaxLength": "Maximum spam length in message set to (value)",
      "moderationColor": {
        "text": "Moderation of colors (/me) is",
        "true": "{moderation.settings.moderationColor.text} {core.enabled}",
        "false": "{moderation.settings.moderationColor.text} {core.disabled}"
      },
      "moderationColorSubs": {
        "text": "Moderation of colors (/me) for subscribers is",
        "true": "{moderation.settings.moderationColorSubs.text} {core.enabled}",
        "false": "{moderation.settings.moderationColorSubs.text} {core.disabled}"
      },
      "moderationColorTimeout": "Timeout because of colors (/me) usage set to (value)s",
      "moderationEmotes": {
        "text": "Moderation of emotes is",
        "true": "{moderation.settings.moderationEmotes.text} {core.enabled}",
        "false": "{moderation.settings.moderationEmotes.text} {core.disabled}"
      },
      "moderationEmotesSubs": {
        "text": "Moderation of emotes for subscribers is",
        "true": "{moderation.settings.moderationEmotesSubs.text} {core.enabled}",
        "false": "{moderation.settings.moderationEmotesSubs.text} {core.disabled}"
      },
      "moderationEmotesTimeout": "Timeout because of emotes spamming set to (value)s",
      "moderationEmotesMaxCount": "Maximum count of emotes in one messages set to (value)",
      "moderationBlacklistTimeout": "Timeout because of blacklisted word set to (value)s",
      "moderationWarnings": "User will be warned (value) times",
      "moderationWarningsTimeouts": {
        "true": "Warnings are set to be 1s timeout",
        "false": "Warnings are set to chat message only"
      }
    }
  },
  "queue": {
    "info": {
      "closed": "(sender), {queue.close}",
      "opened": "(sender), {queue.open}"
    },
    "join": {
      "closed": "Sorry (sender), queue is currently closed",
      "opened": "(sender) were added into queue"
    },
    "open": "Queue is currently OPENED! Join to queue with !queue join",
    "close": "Queue is currently closed!",
    "clear": "Queue were completely cleared",
    "picked": {
      "single": "This user was picked from queue: (users)",
      "multi": "These users were picked from queue: (users)",
      "none": "No users were found in queue"
    }
  },
  "title": {
    "current": "(sender), title of stream is '(title)'.",
    "change": {
      "success": "(sender), title was set to: (status)",
      "failed": "(sender), something went wrong. Current title is still set to: (status)"
    }
  },
  "game": {
    "current": "(sender), streamer is currently playing (game).",
    "change": {
      "success": "(sender), game was set to: (game)",
      "failed": "(sender), something went wrong. Current game is still set to: (game)"
    }
  },
  "cooldown": {
    "failed": {
      "parse": "{core.command-parse} !cooldown [command] [global|user] [seconds]",
      "cooldown": "(sender), you cannot use !(command), remaining (seconds)s"
    },
    "success": {
      "set": "(type) cooldown for !(command) was set to (seconds)s",
      "unset": "Cooldown for !(command) was unset"
    }
  },
  "gambling": {
    "duel": {
      "joined": "(sender), good luck with your dueling skills. You bet on yourself (points) (pointsName)!",
      "added": "(sender) really thinks he is better than others raising his bet to (points) (pointsName)!",
      "new": "(sender) is your new duel challenger! To participate use !duel [points], you have (minutes) (minutesName) left to join.",
      "zeroBet": "(sender), you cannot duel 0 (pointsName)",
      "notEnoughOptions": "(sender), you need to specify points to dueling",
      "notEnoughPoints": "(sender), you don't have enough (pointsName) to duel!",
      "noContestant": "Only (sender) have courage to join duel! Your bet of (points) (pointsName) are returned to you.",
      "winner": "Congratulations to (winner)! He is last man standing and he won (points) (pointsName)!"
    },
    "roulette": {
      "trigger": "(sender) pulled a trigger",
      "alive": "and nothing happened",
      "dead": "and bullet splashed his brain on the wall",
      "timeout": "Roulette timeout set to (value)s"
    },
    "seppuku": {
      "text": "(sender) has committed seppuku.",
      "timeout": "Seppuku timeout set to (value)s"
    },
    "gamble": {
      "zeroBet": "(sender), you cannot gamble 0 (pointsName)",
      "notEnoughOptions": "(sender), you need to specify points to gamble",
      "notEnoughPoints": "(sender), you don't have enough (pointsName) to gamble",
      "win": "(sender), you WON! You now have (points) (pointsName)",
      "lose": "(sender), you LOST! You now have (points) (pointsName)"
    }
  },
  "regulars": {
    "add": {
      "success": "@(username) was set as channel regular",
      "undefined": "@(username) doesn't exist in bot database",
      "empty": "Correct usage: !regular add <username>"
    },
    "rm": {
      "success": "@(username) is not channel regular anymore",
      "undefined": "@(username) doesn't exist in bot database",
      "empty": "Correct usage: !regular remove <username>"
    }
  },
  "merge": {
    "noUsername": "(sender), you need to specify username to merge",
    "success": "(sender), (username) have now data of (merged-username)",
    "noID": "(sender), specified username doesn't have ID and cannot be merged",
    "noUsernameToMerge": "(sender), no other username was found to merge"
  },
  "highlights": {
    "saved": {
      "description": "(sender), highlight was saved for (hours)h(minutes)m(seconds)s as `(description)`",
      "no-description": "(sender), highlight was saved for (hours)h(minutes)m(seconds)s"
    },
    "list": {
      "items": "(sender), list of saved highlights for latest stream: (items)",
      "empty": "(sender), no highlights were saved"
    },
    "offline": "(sender), cannot save highlight, stream is offline"
  }
}
